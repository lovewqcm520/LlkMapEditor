<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   creationComplete="init()"
					   width="800" height="600">
	<fx:Style source="LlkMapEditor.css"/>
	<fx:Declarations>
		<s:RadioButtonGroup id="tileRadioGroup"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script> 
		<![CDATA[ 
			import com.jack.control.events.EditorEvent;
			import com.jack.control.events.EventController;
			import com.jack.util.Delay;
			import com.jack.view.module.MapPanel;
			import com.jack.view.module.ProjectConfigPanel;
			import com.jack.vo.MapVO;
			import com.jack.vo.ProjectVO;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			private var EMPTY_COLOR:uint = 0xffffff;
			private var ITEM_COLOR:uint = 0x00ff00;
			private var TAG_EMPTY:int = -1;
			private var COL_DEFAULT:int = 8;
			private var ROW_DEFAULT:int = 8;
			private var ITEMS_DEFAULT:int = 8;
			
			public var mapCol:int;
			public var mapRow:int;
			private var nExistItems:int;
			private var curColorSelected:uint = EMPTY_COLOR;

			private var map:MapVO; 

			private var file:FileReference;

			private var mapPanel:MapPanel;
			
			public function init():void
			{
				map = new MapVO();			
				
				
				EventController.e.addEventListener(EditorEvent.CREATE_PROJECT, onCreateProject);
				
				addEventListener(MouseEvent.MOUSE_UP, onStageMouseUp);
				addEventListener(Event.DEACTIVATE, onDeactivate);
			}
			
			protected function onStageMouseUp(event:MouseEvent):void
			{
				if(mapPanel)
				{
					mapPanel.disableEditContainerMouse();
				}
			}
			
			protected function onDeactivate(event:Event):void
			{
				if(mapPanel)
				{
					mapPanel.disableEditContainerMouse();
				}
			}
			
			private function loadProjectFile():void
			{
				file.load();
			}
			
			private function onProjectFileLoaded(e:Event):void
			{
				file=e.target as FileReference;
				file.removeEventListener(Event.COMPLETE, onProjectFileLoaded);
				var b:ByteArray=file.data;
				var str:String = b.readUTFBytes(b.length);
				var xml:XML = new XML(str);
				
				if(!mapPanel)
				{
					mapPanel = new MapPanel();
					mapPanel.x = 14;
					mapPanel.y = 65;
					PopUpManager.addPopUp(mapPanel, this, false);
				}
				
				mapPanel.importExistingProject(xml);
			}		
			
			protected function onNewProjectClick(event:MouseEvent):void
			{
				if(mapPanel)
				{
					// notice user save the current project
					// show alert
					var text:String = "Do you want save current project?";
					var title:String = "Warning";
					Alert.show(text, title, Alert.YES|Alert.NO, this, onSaveCurProjectAlertCloseHandler);
				}
				else
				{
					var newProjectConfigPanel:ProjectConfigPanel = new ProjectConfigPanel();
					newProjectConfigPanel.x = (width-newProjectConfigPanel.width)/2;
					newProjectConfigPanel.y = (height-newProjectConfigPanel.height)/2;
					PopUpManager.addPopUp(newProjectConfigPanel, this, true);
				}
			}
			
			protected function onOpenProjectClick(event:MouseEvent):void
			{
				if(mapPanel)
				{
					// notice user save the current project
					// show alert
					var text:String = "Do you want save current project?";
					var title:String = "Warning";
					Alert.show(text, title, Alert.YES|Alert.NO, this, onSaveCurProjectAlertCloseHandler1);
				}
				else
				{
					file = new FileReference();
					file.addEventListener(Event.SELECT, onFileSelected);
					var swfTypeFilter:FileFilter=new FileFilter("llk Files", "*.llk;");
					file.browse([swfTypeFilter]);
				}
			}
			
			protected function onSaveProjectClick(event:MouseEvent=null):void
			{
				if(mapPanel)
				{
					mapPanel.saveProject();
				}
			}
			
			protected function onExportDataClick(event:MouseEvent):void
			{
				if(mapPanel)
				{
					mapPanel.exportProjectData();
				}
			}
			
			protected function onCreateProject(event:EditorEvent):void
			{
				// dispose old porject
				if(mapPanel)
				{
					PopUpManager.removePopUp(mapPanel);
					if(mapPanel.parent)
					{
						mapPanel.parent.removeChild(mapPanel);
						mapPanel.dispose();
						mapPanel = null;
					}
				}
				// create new project
				mapPanel = new MapPanel();
				mapPanel.x = 14;
				mapPanel.y = 65;
				PopUpManager.addPopUp(mapPanel, this, false);
				mapPanel.createNewProject(event.params as ProjectVO);
			}
			
			private function onSaveCurProjectAlertCloseHandler(event:CloseEvent):void
			{
				switch(event.detail)
				{
					case Alert.NO:
					{
						break;
					}
						
					case Alert.YES:
					{
						onSaveProjectClick(null);
						break;
					}
				}
				
				// show the project config panel
				var newProjectConfigPanel:ProjectConfigPanel = new ProjectConfigPanel();
				newProjectConfigPanel.x = (width-newProjectConfigPanel.width)/2;
				newProjectConfigPanel.y = (height-newProjectConfigPanel.height)/2;
				PopUpManager.addPopUp(newProjectConfigPanel, this, true);
			}
			
			private function onSaveCurProjectAlertCloseHandler1(event:CloseEvent):void
			{
				switch(event.detail)
				{
					case Alert.NO:
					{
						break;
					}
						
					case Alert.YES:
					{
						onSaveProjectClick(null);
						break;
					}
				}
				
				file = new FileReference();
				file.addEventListener(Event.SELECT, onFileSelected);
				var swfTypeFilter:FileFilter=new FileFilter("llk Files", "*.llk;");
				file.browse([swfTypeFilter]);
			}
			
			protected function onFileSelected(event:Event):void
			{
				file = event.currentTarget as FileReference;
				//content.picTxt.text=fileReference.name;
				file.addEventListener(Event.COMPLETE, onProjectFileLoaded);
				
				Delay.doIt(10, loadProjectFile)
			}
			
		]]>
	</fx:Script>
	<s:VGroup id="itemSelectGroup" x="682" y="66" width="81" height="74">
	</s:VGroup>
	
	
	<s:HGroup x="14" y="10" width="655" height="48" gap="0" verticalAlign="middle">
		<s:Button id="newProjectBtn" width="136" height="34" label="New Project"
				  click="onNewProjectClick(event)" fontFamily="Courier New"
				  icon="assets/image 201.png" toolTip="Create a new project"/>
		<s:Button id="openProjectBtn" width="136" height="34" label="Open Project"
				  click="onOpenProjectClick(event)" fontFamily="Courier New"
				  icon="assets/image 237.png" toolTip="Open a existing project"/>
		<s:Button id="saveProjectBtn" width="136" height="34" label="Save Project"
				  click="onSaveProjectClick(event)" fontFamily="Courier New"
				  icon="assets/image 221.png" toolTip="Save current project"/>
		<s:Button id="exportDataBtn" width="136" height="34" label="Export Data"
				  click="onExportDataClick(event)" fontFamily="Courier New"
				  icon="assets/image 194.png" toolTip="Export data"/>
	</s:HGroup>
		
	
	
</s:WindowedApplication>
